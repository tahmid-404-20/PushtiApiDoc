[
    {
        "usecase": {
            "name": "Farmer Registration",
            "scenario": "A farmer is registered under an agent in the corresponding union parishad.",
            "actors": "Agent, Farmer",
            "preconditions": "Agent is appointed at union parishad level.",
            "steps": [
                "Farmer approaches the agent for registration.",
                "Agent collects necessary information from the farmer.",
                "Agent registers the farmer in the system."
            ]
        },
        "testcases": [
            {
                "name": "Valid Farmer Registration",
                "description": "Verify that a farmer can be successfully registered under an agent with all necessary information provided.",
                "input": {
                    "farmerDetails": {
                        "name": "John Doe",
                        "address": "Union Parishad 1",
                        "contact": "0123456789"
                    }
                },
                "expected": {
                    "outcome": "Registration successful",
                    "status": "Registered"
                }
            },
            {
                "name": "Incomplete Farmer Registration",
                "description": "Verify that the registration fails if the farmer provides incomplete information.",
                "input": {
                    "farmerDetails": {
                        "name": "",
                        "address": "Union Parishad 1",
                        "contact": "0123456789"
                    }
                },
                "expected": {
                    "outcome": "Registration failed",
                    "status": "Incomplete information"
                }
            },
            {
                "name": "Duplicate Farmer Registration",
                "description": "Verify that the system prevents duplicate registrations for the same farmer.",
                "input": {
                    "farmerDetails": {
                        "name": "John Doe",
                        "address": "Union Parishad 1",
                        "contact": "0123456789"
                    }
                },
                "expected": {
                    "outcome": "Registration failed",
                    "status": "Duplicate detected"
                }
            }
        ]
    },
    {
        "usecase": {
            "name": "Loan Application and Approval",
            "scenario": "Farmer or SME applies for a loan and the agent approves it.",
            "actors": "Farmer or SME, Agent",
            "preconditions": "Farmer or SME is registered under an agent.",
            "steps": [
                "Farmer or SME logs into the system and applies for a loan.",
                "Agent reviews the loan application.",
                "Agent approves or rejects the loan."
            ]
        },
        "testcases": [
            {
                "name": "Valid Loan Application",
                "description": "Verify that a farmer or SME can successfully apply for a loan and get it approved by the agent.",
                "input": {
                    "loanAmount": 5000,
                    "description": "I want the loan for new cows."
                },
                "expected": {
                    "outcome": "Loan application successful",
                    "status": "Approved"
                }
            },
            {
                "name": "Loan Application Exceeds Limit",
                "description": "Verify that the system rejects a loan application when the requested amount exceeds the budget limit of the union.",
                "input": {
                    "loanAmount": 15000
                },
                "expected": {
                    "outcome": "Loan application failed",
                    "status": "Rejected - Not enough budget"
                }
            }
        ]
    },
    {
        "usecase": {
            "name": "Buy Request and Approval",
            "scenario": "Agent generates a buy request and the farmer or SME approves it.",
            "actors": "Agnet, Farmer or SME",
            "preconditions": "Framer or SME is registered under the agent and he has brought his products to sell.",
            "steps": [
                "Agent inputs the buy items and their quantities",
                "Agent generates a buy request",
                "Farmer or SME checks the buy request and approves it"
            ]
        },
        "testcases": [
            {
                "name": "Valid Buy Request",
                "description": "Verify that a agent can successfully generate a buy request and the farmer or SME can approve it.",
                "input": {
                    "farmer_id": 123456789,
                    "products": [
                        {  
                            "product_id": 23,
                            "name": "Milk",  
                            "quantity": 10
                        },
                        {    
                            "product_id": 24,    
                            "name": "Beef",
                            "quantity": 10
                        }
                    ]
                },
                "expected": {
                    "outcome": "Sales successful, deduction applied",
                    "status": "Completed"
                }
            },
            {
                "name": "Rejected Buy Request",
                "description": "Verify that a farmer or SME can reject the generated buy request.",
                "input": {
                    "farmer_id": 123456789,
                    "products": [
                        {  
                            "product_id": 23,
                            "name": "Milk",  
                            "quantity": 10
                        },
                        {    
                            "product_id": 24,    
                            "name": "Beef",
                            "quantity": 2
                        }
                    ]
                },
                "expected": {
                    "outcome": "Sales failed",
                    "status": "Rejected"
                }
            },
            {
                "name": "Not Enough Budget",
                "description": "Verify that the system handles cases where the total payable amount exceeds the budget of the union.",
                "input": {
                    "farmer_id": 123456789,
                    "products": [
                        {  
                            "product_id": 23,
                            "name": "Milk",  
                            "quantity": 10
                        },
                        {    
                            "product_id": 100,    
                            "name": "Beef",
                            "quantity": 2
                        }
                    ]
                },
                "expected": {
                    "outcome": "Sales failed",
                    "status": "Rejected - Not enough budget"
                }
            }
        ]
    },
    {
        "usecase": {
            "name": "Sell Request and Approval",
            "scenario": "Agent generates a sell request and the vendor or SME approves it.",
            "actors": "Agnet, Vendor or SME",
            "preconditions": "Vendor or SME is registered under the agent and he is buying from agent.",
            "steps": [
                "Agent inputs the sell items and their quantities",
                "Agent generates a sell request",
                "Vendor or SME checks the sell request and approves it"
            ]
        },
        "testcases": [
            {
                "name": "Valid Sell Request",
                "description": "Verify that an agent can successfully generate a sell request and the vendor or SME can approve it.",
                "input": {
                    "vendor_id": 123456789,
                    "products": [
                        {  
                            "product_id": 23,
                            "name": "Milk",  
                            "quantity": 10
                        },
                        {    
                            "product_id": 24,    
                            "name": "Beef",
                            "quantity": 10
                        }
                    ]
                },
                "expected": {
                    "outcome": "Sales successful",
                    "status": "Completed"
                }
            },
            {
                "name": "Rejected Sell Request",
                "description": "Verify that a vendor or SME can reject the generated buy request.",
                "input": {
                    "vendor_id": 123456789,
                    "products": [
                        {  
                            "product_id": 23,
                            "name": "Milk",  
                            "quantity": 10
                        },
                        {    
                            "product_id": 24,    
                            "name": "Beef",
                            "quantity": 2
                        }
                    ]
                },
                "expected": {
                    "outcome": "Sales failed",
                    "status": "Rejected"
                }
            },
            {
                "name": "Not Enough Product in the Inventory",
                "description": "Verify that the system handles cases where the quantity of an product exceeds the inventory of the union.",
                "input": {
                    "vendor_id": 123456789,
                    "products": [
                        {  
                            "product_id": 23,
                            "name": "Milk",  
                            "quantity": 10
                        },
                        {    
                            "product_id": 100,    
                            "name": "Beef",
                            "quantity": 200
                        }
                    ]
                },
                "expected": {
                    "outcome": "Sales failed",
                    "status": "Rejected - Not enough product"
                }
            }
        ]
    },
    {
        "usecase": {
            "name": "SME Product Purchases and Loans",
            "scenario": "SMEs can buy products, take loans, and sell their products.",
            "actors": "SME, Agent",
            "preconditions": "SME is registered in the system.",
            "steps": [
                "SME logs into the system and browses products.",
                "SME applies for a loan for business purposes.",
                "SME sells products through the system."
            ]
        },
        "testcases": [
            {
                "name": "Valid SME Loan Application",
                "description": "Verify that an SME can successfully apply for and be granted a loan.",
                "input": {
                    "loanAmount": 10000
                },
                "expected": {
                    "outcome": "Loan application successful",
                    "status": "Approved"
                }
            },
            {
                "name": "SME Loan Application Without Registration",
                "description": "Verify that the system rejects loan applications from SMEs that are not registered.",
                "input": {
                    "loanAmount": 5000
                },
                "expected": {
                    "outcome": "Loan application failed",
                    "status": "Rejected - Not registered"
                }
            },
            {
                "name": "SME Product Purchase",
                "description": "Verify that SMEs can successfully purchase products through the system.",
                "input": {
                    "product": "Fertilizer",
                    "quantity": 20
                },
                "expected": {
                    "outcome": "Purchase successful",
                    "status": "Completed"
                }
            },
            {
                "name": "Invalid SME Product Purchase",
                "description": "Verify that the system handles cases where SMEs try to purchase more products than available in stock.",
                "input": {
                    "product": "Fertilizer",
                    "quantity": 1000
                },
                "expected": {
                    "outcome": "Purchase failed",
                    "status": "Insufficient stock"
                }
            }
        ]
    },
    {
        "usecase": {
            "name": "Loan Approval",
            "scenario": "Agent approves the loan from farmer or SME",
            "actors": "Agent",
            "preconditions": "Farmer or SME registered under the agent has generated a loan request.",
            "steps": [
                "Agent logs in the system and check the pending requests.",
                "Agent selects an amount inside the requested range.",
                "Agent approves or rejects the loan."
            ]
        },
        "testcases": [
            {
                "name": "Loan Approval",
                "description": "Verify that an agent can successfully approve a loan request.",
                "input": {
                    "approvedAmount": 5000,
                    "loan_id": 10
                },
                "expected": {
                    "outcome": "Loan approval successful",
                    "status": "Ongoing"
                }
            },
            {
                "name": "Loan Rejection",
                "description": "Verify that an agent can successfully reject a loan request.",
                "input": {
                    "loan_id": 10
                },
                "expected": {
                    "outcome": "Loan rejection successful",
                    "status": "Rejected"
                }
            },
            {
                "name": "Budget Exceeded",
                "description": "Verify that the system can stop approval when union budget is exceeded.",
                "input": {
                    "approvedAmount": 50000,
                    "loan_id": 10
                },
                "expected": {
                    "outcome": "Loan approval failed",
                    "status": "Rejected - Not enough budget"
                }
            }
        ]
    }
]
